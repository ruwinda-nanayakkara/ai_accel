
// -------------------------------------------------------------
// 
// File Name: hdlsrc\Mul\Mul.v
// Created: 2024-01-01 11:47:02
// 
// Generated by MATLAB 9.12 and HDL Coder 3.20
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 0.2
// Target subsystem base rate: 0.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Mul
// Source Path: Mul
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Mul
          (InBus_signal1,
           OutBus_signal1);


  input   signed [15:0] InBus_signal1;  // sfix16_En11
  output  signed [23:0] OutBus_signal1;  // sfix24_En14


  wire signed [15:0] Constant2_out1;  // sfix16_En14
  wire signed [15:0] a0_out1;  // sfix16_En15
  wire signed [31:0] Product1_mul_temp;  // sfix32_En29
  wire signed [15:0] Product1_out1;  // sfix16_En14
  wire signed [15:0] signal1;  // sfix16_En11
  wire signed [31:0] Gain_mul_temp;  // sfix32_En28
  wire signed [15:0] Gain_out1;  // sfix16_En8
  wire signed [15:0] a1_out1;  // sfix16_En15
  wire signed [31:0] Gain1_mul_temp;  // sfix32_En21
  wire signed [15:0] Gain1_out1;  // sfix16_En8
  wire signed [31:0] Product3_mul_temp;  // sfix32_En16
  wire signed [15:0] Product3_out1;  // sfix16_En8
  wire signed [31:0] Gain3_mul_temp;  // sfix32_En20
  wire signed [15:0] Gain3_out1;  // sfix16_En5
  wire signed [22:0] Sum1_sub_cast;  // sfix23_En14
  wire signed [22:0] Sum1_sub_cast_1;  // sfix23_En14
  wire signed [22:0] Sum1_out1;  // sfix23_En14
  wire signed [45:0] Gain2_cast;  // sfix46_En36
  wire signed [15:0] Gain2_out1;  // sfix16_En8
  wire signed [31:0] Product4_mul_temp;  // sfix32_En13
  wire signed [15:0] Product4_out1;  // sfix16_En5
  wire signed [31:0] Product2_mul_temp;  // sfix32_En23
  wire signed [15:0] Product2_out1;  // sfix16_En8
  wire signed [23:0] Sum_stage2_sub_cast;  // sfix24_En14
  wire signed [23:0] Sum_stage2_sub_cast_1;  // sfix24_En14
  wire signed [23:0] Sum_op_stage1;  // sfix24_En14
  wire signed [31:0] Gain4_cast;  // sfix32_En21
  wire signed [15:0] Gain4_out1;  // sfix16_En8
  wire signed [19:0] Sum2_sub_cast;  // sfix20_En8
  wire signed [19:0] Sum2_sub_cast_1;  // sfix20_En8
  wire signed [19:0] Sum2_out1;  // sfix20_En8
  wire signed [39:0] Gain5_mul_temp;  // sfix40_En28
  wire signed [15:0] Gain5_out1;  // sfix16_En8
  wire signed [31:0] Gain6_mul_temp;  // sfix32_En25
  wire signed [15:0] Gain6_out1;  // sfix16_En8
  wire signed [23:0] Sum_stage3_add_cast;  // sfix24_En14
  wire signed [23:0] Sum_out1;  // sfix24_En14


  assign Constant2_out1 = 16'sb0100000000000000;



  assign a0_out1 = 16'sb0100000000000000;



  assign Product1_mul_temp = Constant2_out1 * a0_out1;
  assign Product1_out1 = Product1_mul_temp[30:15];



  assign signal1 = InBus_signal1;

  assign Gain_mul_temp = 16'sb1001100110011010 * signal1;
  assign Gain_out1 = {{4{Gain_mul_temp[31]}}, Gain_mul_temp[31:20]};



  assign a1_out1 = 16'sb0101001111111011;



  assign Gain1_mul_temp = 16'sb0110000000000000 * Gain_out1;
  assign Gain1_out1 = Gain1_mul_temp[28:13];



  assign Product3_mul_temp = Gain1_out1 * Gain_out1;
  assign Product3_out1 = Product3_mul_temp[23:8];



  assign Gain3_mul_temp = 16'sb0101000000000000 * Gain_out1;
  assign Gain3_out1 = Gain3_mul_temp[30:15];



  assign Sum1_sub_cast = {Product3_out1[15], {Product3_out1, 6'b000000}};
  assign Sum1_sub_cast_1 = {{7{Constant2_out1[15]}}, Constant2_out1};
  assign Sum1_out1 = Sum1_sub_cast - Sum1_sub_cast_1;



  assign Gain2_cast = {{2{Sum1_out1[22]}}, {Sum1_out1, 21'b000000000000000000000}};
  assign Gain2_out1 = Gain2_cast[43:28];



  assign Product4_mul_temp = Gain3_out1 * Gain2_out1;
  assign Product4_out1 = Product4_mul_temp[23:8];



  assign Product2_mul_temp = Gain_out1 * a1_out1;
  assign Product2_out1 = Product2_mul_temp[30:15];



  assign Sum_stage2_sub_cast = {{8{Product1_out1[15]}}, Product1_out1};
  assign Sum_stage2_sub_cast_1 = {{2{Product2_out1[15]}}, {Product2_out1, 6'b000000}};
  assign Sum_op_stage1 = Sum_stage2_sub_cast - Sum_stage2_sub_cast_1;



  assign Gain4_cast = {{2{Gain_out1[15]}}, {Gain_out1, 14'b00000000000000}};
  assign Gain4_out1 = Gain4_cast[28:13];



  assign Sum2_sub_cast = {Product4_out1[15], {Product4_out1, 3'b000}};
  assign Sum2_sub_cast_1 = {{4{Gain4_out1[15]}}, Gain4_out1};
  assign Sum2_out1 = Sum2_sub_cast - Sum2_sub_cast_1;



  assign Gain5_mul_temp = 20'sb01010101010100110010 * Sum2_out1;
  assign Gain5_out1 = Gain5_mul_temp[35:20];



  assign Gain6_mul_temp = 16'sb0111001010001001 * Gain5_out1;
  assign Gain6_out1 = {Gain6_mul_temp[31], Gain6_mul_temp[31:17]};



  assign Sum_stage3_add_cast = {{2{Gain6_out1[15]}}, {Gain6_out1, 6'b000000}};
  assign Sum_out1 = Sum_op_stage1 + Sum_stage3_add_cast;



  assign OutBus_signal1 = Sum_out1;

endmodule  // Mul